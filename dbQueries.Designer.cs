//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace dbShowDepends {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class dbQueries {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal dbQueries() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("dbShowDepends.dbQueries", typeof(dbQueries).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to use &lt;DB&gt;;.
        /// </summary>
        internal static string changeDB {
            get {
                return ResourceManager.GetString("changeDB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select d.name
        ///from sys.databases d
        ///order by d.name;.
        /// </summary>
        internal static string databaseList {
            get {
                return ResourceManager.GetString("databaseList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to --declare @ObjectName sysname = &apos;dbo.korm_Request_CheckBusinessLogic&apos;;
        ///
        ///if object_id(&apos;tempdb..#weakObj&apos;) is null
        ///	create table #weakObj (objName sysname not null);
        ///
        ///IF EXISTS (
        ///    select 1
        ///    from #weakObj w
        ///    where w.objName = @ObjectName
        ///)
        ///BEGIN
        ///  SELECT &apos;&lt;not avaible: weak object&gt;&apos; refName;
        ///END
        ///ELSE
        ///BEGIN
        ///  SELECT DISTINCT
        ///    ISNULL(re.referenced_schema_name, &apos;dbo&apos;)
        ///    + &apos;.&apos;
        ///    + re.referenced_entity_name
        ///    + ISNULL(&apos;.&apos; + re.referenced_minor_name, &apos;&apos;) refName
        ///  , re.reference [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string findReferencedObjs {
            get {
                return ResourceManager.GetString("findReferencedObjs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select db_name();.
        /// </summary>
        internal static string getDbName {
            get {
                return ResourceManager.GetString("getDbName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select SCHEMA_NAME(o.schema_id) + &apos;.&apos;+ OBJECT_NAME(o.object_id) FullName
        ///, DB_NAME() DatabaseName
        ///, o.type
        ///, o.type_desc
        ///, o.modify_date
        ///from sys.objects o
        ///where o.name like &apos;%&apos; + isnull(@SearchName,&apos;&apos;) + &apos;%&apos;
        ///  AND o.type not in (&apos;S&apos;, &apos;IT&apos;, &apos;SQ&apos;)
        ///  AND o.type IN (&lt;objTypes&gt;)
        ///order by FullName;.
        /// </summary>
        internal static string objectList {
            get {
                return ResourceManager.GetString("objectList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- поиск &quot;плохих&quot; объектов
        ///-- (на которые нельзя найти ссылки)
        ///
        ///set nocount on;
        ///
        ///if OBJECT_ID(&apos;tempdb..#weakObj&apos;) is not null
        ///  drop table #weakObj;
        ///create table #weakObj (objId int primary key, objName varchar(100) not null);
        ///
        ///declare @objId int, @objName sysname;
        ///declare @res table (r int not null);
        ///
        ///declare cr cursor local
        ///for
        ///  select o.object_id objId
        ///  , OBJECT_SCHEMA_NAME(o.object_id, DB_ID()) + &apos;.&apos; + o.name objName
        ///  from sys.all_objects o
        ///  where o.type in (&apos;u&apos;, &apos;f&apos;, &apos;fn&apos;, &apos;p&apos;);
        ///        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string prepareWeakObjects {
            get {
                return ResourceManager.GetString("prepareWeakObjects", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT sm.object_id
        ///, object_schema_name(sm.object_id) + &apos;.&apos; + OBJECT_NAME(sm.object_id) AS object_name
        ///, o.type
        ///, o.type_desc
        ///, sm.definition
        ///FROM sys.sql_modules AS sm
        ///JOIN sys.objects AS o ON sm.object_id = o.object_id
        ///where sm.object_id = object_id(@ObjectName).
        /// </summary>
        internal static string showSource {
            get {
                return ResourceManager.GetString("showSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select OBJECT_ID(&apos;tempdb..#weakObj&apos;).
        /// </summary>
        internal static string tempTableId {
            get {
                return ResourceManager.GetString("tempTableId", resourceCulture);
            }
        }
    }
}
